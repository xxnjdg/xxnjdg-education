<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.xxnjdg.notp.user.mapper.UserLogModifiedMapper">
  <resultMap id="BaseResultMap" type="io.xxnjdg.notp.user.model.UserLogModified">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="user_no" jdbcType="BIGINT" property="userNo" />
    <result column="mobile_old" jdbcType="CHAR" property="mobileOld" />
    <result column="mobile_new" jdbcType="CHAR" property="mobileNew" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, user_no, mobile_old, mobile_new, remark
  </sql>
  <select id="selectByExample" parameterType="io.xxnjdg.notp.user.model.UserLogModifiedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_log_modified
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_log_modified
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_log_modified
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.xxnjdg.notp.user.model.UserLogModifiedExample">
    delete from user_log_modified
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.xxnjdg.notp.user.model.UserLogModified">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_log_modified (gmt_create, user_no, mobile_old, 
      mobile_new, remark)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{userNo,jdbcType=BIGINT}, #{mobileOld,jdbcType=CHAR}, 
      #{mobileNew,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.xxnjdg.notp.user.model.UserLogModified">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_log_modified
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="mobileOld != null">
        mobile_old,
      </if>
      <if test="mobileNew != null">
        mobile_new,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=BIGINT},
      </if>
      <if test="mobileOld != null">
        #{mobileOld,jdbcType=CHAR},
      </if>
      <if test="mobileNew != null">
        #{mobileNew,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.xxnjdg.notp.user.model.UserLogModifiedExample" resultType="java.lang.Long">
    select count(*) from user_log_modified
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_log_modified
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=BIGINT},
      </if>
      <if test="record.mobileOld != null">
        mobile_old = #{record.mobileOld,jdbcType=CHAR},
      </if>
      <if test="record.mobileNew != null">
        mobile_new = #{record.mobileNew,jdbcType=CHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_log_modified
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      user_no = #{record.userNo,jdbcType=BIGINT},
      mobile_old = #{record.mobileOld,jdbcType=CHAR},
      mobile_new = #{record.mobileNew,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.xxnjdg.notp.user.model.UserLogModified">
    update user_log_modified
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=BIGINT},
      </if>
      <if test="mobileOld != null">
        mobile_old = #{mobileOld,jdbcType=CHAR},
      </if>
      <if test="mobileNew != null">
        mobile_new = #{mobileNew,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.xxnjdg.notp.user.model.UserLogModified">
    update user_log_modified
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      user_no = #{userNo,jdbcType=BIGINT},
      mobile_old = #{mobileOld,jdbcType=CHAR},
      mobile_new = #{mobileNew,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>